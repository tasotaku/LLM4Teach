{
    "twodoor":{
        "episode": 150,
        "level": "easy",
        "description": "In a locked 2D grid room, there is an agent whose task is to open the door. The door can only be opened while agent holds the key. The agent can perform the following actions: explore, go to <object>, pick up <object>, drop <object>, or open <object>. Please clarify which object the agent has seen and is holding given the information provided. Then, please inference what the agent should do in current state. Finally, please select the correct agent action.",
        "example": "\n Example: \n Agent see <key>, holds <nothing>. \n 1. What agent sees and holds: Agent sees key, holds nothing, has not seen door yet. \n 2. What should the agent do: the agent should go to the key and then, pick it up. \n 3. Action: {go to <key>, pick up <key>} \n.",
        "configurations": "MiniGrid-TwoDoor-Min20-Max20" 
    },
    
    "simpledoorkey":{
        "episode": 150,
        "level": "easy",
        "description": "In a locked 2D grid room, there is an agent whose task is to open the door. The door can only be opened while the agent holds the key. The agent can perform the following actions: explore, go to <object>, pick up <object>, drop <object>, or open <object>. To perform the 'pick up' and 'open' actions, the agent must first go to the specified object. Please clarify which object the agent has seen and is holding given the information provided. Then, please infer what the agent should do in the current state. Finally, please select the correct agent action.",
        "example": "\n Example: \n Agent see <key>, holds <nothing>. \n 1. What agent sees and holds: Agent sees key, holds nothing, has not seen door yet. \n 2. What should the agent do: the agent should go to the key and then, pick it up. \n 3. Action: {go to <key>, pick up <key>} \n.",
        "configurations": "MiniGrid-SimpleDoorKey-Min5-Max10-View3" 
    },

    "lavadoorkey":{
        "episode": 150,
        "level": "hard",
        "description": "In a locked 2D grid room, there is an agent whose task is to open the door. The door can only be opened while agent holds the key. The agent can perform the following actions: explore, go to <object>, pick up <object>, drop <object>, or open <object>. Please clarify which object the agent has seen and is holding given the information provided. Then, please inference what the agent should do in current state. Finally, please select the correct agent action.",
        "example": "\n Example: \n Agent see <key>, holds <nothing>. \n 1. What agent sees and holds: Agent sees key, holds nothing, has not seen door yet. \n 2. What should the agent do: the agent should go to the key and then, pick it up. \n 3. Action: {go to <key>, pick up <key>} \n.",
        "configurations": "MiniGrid-LavaDoorKey-Min5-Max10-View3" 
    },

    "coloreddoorkey":{
        "episode": 150,
        "level": "medium",
        "description": "In a locked 2D grid room, agent can only open door while holding a key that matches color of door. Agent can perform following actions: explore, go to <object>, pick up <object>, drop <object>, or open <object>. Agent can only hold one object. Please clarify which object agent sees and holds given information provided. Then, please inference what agent can do in current state. Finally, please select the correct actions.",
        "example":  "\n Example: \n Agent sees <key>, holds <nothing>. \n 1. What agent sees and holds: Agent sees key, holds nothing, has not seen door yet. \n 2. What should agent do: Agent should first go to key, and then pick up key. \n 3. Action: {go to <key>, pick up <key>} \n.",
        "configurations": "MiniGrid-ColoredDoorKey-Min5-Max10-View3"
    },

    "starcraft2":{   
        "map_name": "Simple64",
        "step_mul" : 48,
        "game_steps_per_episode": 40000,
        "description" : "In a strategy game, players build facilities, produce units, and win by destroying the opponent's base. The agent can perform the following actions: do_nothing, harvest_minerals, build_supply_depot, build_barracks, train_marine, attack. Please follow the strategy below to choose actions: First, if there is no supply_depot, build one. Next, build a barracks. Then, produce marines until their count reaches 10. Once the count reaches 10, attack. Based on the given information, clarify which stage of the strategy the agent is currently in and explain why you made that determination. Then, infer what the agent should do in the current state. Finally, select the correct action.",
        "example" : "\n Example: \n Number of command centers: 1\nNumber of supply depots: 1\nNumber of completed supply depots: 1\nNumber of barracks: 1\nNumber of completed barracks: 1\nNumber of marines: 7\nNumber of marines_in_production: 5\nFree supply available: 6\nCan afford supply depot (1 for yes, 0 for no): True\nCan afford barracks (1 for yes, 0 for no): True\nCan afford marine (1 for yes, 0 for no): True\n\nNote: The 'Number of marines' represents the count of marines that have already been produced and are available for use. The 'Number of marines_in_production' represents marines that are currently queued for production and are not yet completed. Since there is a delay between queuing a marine for production and its completion, only the 'Number of marines' should be considered when determining whether the count has reached the target of 10. Even if the combined total of 'Number of marines' and 'Number of marines_in_production' exceeds 10, the agent should not attack until the 'Number of marines' itself reaches 10.\n\nWhich stage of the strategy the agent is in: The agent has a supply depot and barracks, but only 7 marines (excluding marines in production), so it is in stage (3).\nWhat the agent should do: The agent should continue producing marines until the 'Number of marines' (excluding marines in production) reaches 10. The agent should not attack until the 'Number of marines' is 10.\nAction: {train_marine}"

    }

}